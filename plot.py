import numpy as np
from PIL import Image
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import io

path = './outputs/UE4 and Airsim/'
test = np.load(path + '20240110-151138/results/train_images.npy')

# binary_string = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x01\x00\x00\x00\x00\x90\x08\x06\x00\x00\x00\xe7c\xb5\x91\x00\x00\x07.IDATx\x01\xed\xdd\xddN\xf2Z\x10\x06`\x7f8\xd1D\xaf\xc1C\xcf\xbc\xff\xeb2\xd1\xc4\xf8\xb3%\xd9_\x02\x86\x96\x02\xb3\xbaf\xdag\x9fl\x81v\xd6\xf4\x19\xfb~\x05\x05\xaf???\x7f\xae\x82\xff\xdbl6\xc1\x15\x97S\xee\xeb\xeb\xab\xd9\xc1\\__\xef\xd5\xfe\xf99<\xda\xbf\xdb\xed\xed\xd4\xf9\xc6\xcd\xcdM\xe7\x0e\xf2.?4\xcfK:v\xa6^\xa2\x97|\xdf\xcc\'zr\xba\xd5\xb4\'\x00\x12\x8fz\xf7\x04\x1eK\xff\xdd\xed\x12\x1f\x8e\xd6\x12\n\x08\x80\x84C\xf9\xd7\xd2\xd8I\xffo\x1b\xff\'p\x89\x80\'\\\x97\xe8%\xd9WP$\x19D\xc16\x04@\xc1\xa1\x1djy,\x04\xc6\x1e;T\xcb}\xeb\x11\xf0\x14`A\xb3\xde\x9e\xe8\xbb\xaf\x07\xec\x9e\xf8\xbb_\xefn\xb3\xa0\xc3w(g\x08\xb8\x028\x03\xad\xc2.\xbb\'\xfc\xdf~\xc7\x1e\xfb\xbb\xad\xdb\xcb\x16p\x05\xb0\xb0\xf9:\xb9\x176\xd0\xc6\x87\xe3\n\xa01p\xd6\xf2\x82"\xebd\xe6\xedK\x00\xcc\xebm5\x02\xa9\x04\x04@\xaaqh\x86\xc0\xbc\x02\x02`^o\xab\x11H% \x00R\x8dC3\x04\xe6\x15\x10\x00\xf3z7_m\xea\xcf\xf8\xa7n\xd7\xbca\x0bt\x15\x10\x00]\xf9\xdb,\xee\xe4n\xe3\xba\xc4\xaa\x02`AS\xdd=\xf1w\xbf\xde=\xc4\xed\xfdC\x8f\xedn\xe7\xebu\x08\xf8E\xa0\xc4s\xde\x9e\xa8S\x7f^\x7f\xe8\xa4>t_\xe2\xc3\xd5Z\x07\x01W\x00\x1d\xd0OYr\xcaI<e\x9bS\xd6\xb4\xedz\x04\x9a\x04\xc0\xef\xc7\x8c\xadG\xb0\xe1\x91n\xff\xf5\x9fr\x050e\x9b\x86m*=\x83@\xab\x197y\n\xe03\x01g\xf8\x8e\xf8\xb3\xc4\xdc\x9f\xa5\xf7\xfd\xfd\xfd\xa7\x037[\nl\xaf\xf2Z\x84@\x93+\x80\x96\x10j\x13 \x10\' \x00\xe2,U"PN@\x00\x94\x1b\x99\x86\t\xc4\t\x08\x808K\x95\x08\x94\x13\x10\x00\xe5F\xa6a\x02q\x02\x02 \xceR%\x02\xe5\x04\x04@\xb9\x91i\x98@\x9c\x80\x00\x88\xb3T\x89@9\x01\x01Pnd\x1a&\x10\' \x00\xe2,U"PN@\x00\x94\x1b\x99\x86\t\xc4\t\x08\x808\xcb\xf0J\xdb\xdf\xff\x9e\xf2N\xbf)\xdb\x847\xa7\xe0"\x04\x9a\xbc\x19h\x112\t\x0eb\xea\x9b?\xa6n\x97\xe0\x90\xb4\x90L\xc0\x15@\xb2\x81h\x87\xc0\x9c\x02\x02`Nmk\x11H& \x00\x92\rD;\x04\xe6\x14\xf0\x1a\xc0\x9c\xda\xbfk\xdd\xde\xde\x86\xad\xf8\xf5\xf5\x15V\xeb\x92Bs\x7f\x18\xc9%\xbd\xdaw_\xc0\x15\xc0\xbe\x87[\x04V% \x00\n\x8f;\xc3G\xafE^\xd1\x14\x1eE\xd9\xd6\x05@\xd9\xd1]5\xf9\x8c\xb8S9\xfc\x08\xf2T\xb1\\\xdb\x0b\x80\\\xf38\xb9\x9b\x9eW\x01\xfe\xf5?y\\\xe9v\x10\x00\xe9F\xa2!\x02\xf3\t\x08\x80\xf9\xac\xadD \x9d@\x93\x00\xf0\x87A\xd2\xcdYC\xc5\x05Z\xbd\xd6\xd2$\x00z>/->g\xed\x138(\xd0\xea\r_M\x02\xe0\xe0\x11\xb8\xb3\x99@\xabo\x8ef\r+\x9cF@\x00\xa4\x19\xc5\xf9\x8d\xb4\xba<<\xbf#{V\x11\x10\x00U&\xa5O\x02\r\x04\x04@\x03T%\tT\x11\x10\x00U&\xa5O\x02\r\x04\x04@\x03T%\tT\x11\x10\x00U&\xa5O\x02\r\x04\x04@\x03T%\tT\x11\x10\x00U&\xa5O\x02\r\x04\x04@\x03T%\tT\x11\x10\x00U&\xa5O\x02\r\x04\x04@\x03T%\tT\x11\x10\x00U&\xa5O\x02\r\x04\x04@\x03\xd4\xb9Kz3\xd0\xdc\xe2\xcbYO\x00,`\x96\xde\x0c\xb4\x80!v:\x04\x01\xd0\t\xde\xb2\x042\x08\x08\x80\x0cS\xd0\x03\x81N\x02\x02\xa0\x13\xbce\td\x10\x10\x00\x19\xa6\xa0\x07\x02\x9d\x04\x04@\'x\xcb\x12\xc8  \x002LA\x0f\x04:\t\x08\x80N\xf0\x96%\x90A@\x00d\x98\x82\x1e\x08t\x12\x10\x00\x9d\xe0-K \x83\x80\x00\xc80\x05=\x10\xe8$ \x00:\xc1G.\xeb\xbd\x00\x91\x9a\xeb\xaa\xb5yyy\x19\xfc;\xf3C\xbfc>t\xff\x96n\xec\xb1u\xd1\xcew\xb4OOO\xf3-\xf6\xffJ=\xd6\x9c\xfd \x93-\xf8\xfc\xfc|5\x16\xf6C\x8f\x8d\xdd\x7f\xfd\xf8\xf8\xf83t\x9c\xe7\x9e\xcc\xaf\xaf\xafC%\xdd\x1f,\xb0\x1d\xee\xdd\xdd\xdd\xd5\xdb\xdb[p\xe5\xf1r\xf7\xf7\xf7W\xef\xef\xef\x02\x7f\x9c)\xf4\xd1\x87\x87\x87\xb3\xea\r\x05\xc0\xb6\xd8\xe6\xe3\xe3\xe3\xac\xa2C;\x9d\x1b\x1aC\xf5\xdc\x7f\\\xa0\xc7_c\xee\xb1\xe6q\x89eo\xb1=W\xc7N\xe6s\x8e~\xf3\xfd\xfd=\xb8\x9f\x93y\x90&\xd5\x03c3l\xd5h\x8f5[\x1dK\x95\xba\xe7\x9a\x8f\x85\xc6h\x00T\x81Y{\x9f=\x82\xba\xc7\x9a\xe6<\xf8l}\x94flV\x9b\xb1\x07G\xabz0\x8d@\x8f\x19\xf6X3\rx\xa7FZ\x98\xfb1`\xa7aZ\x96@\x06\x01W\x00\x19\xa6\xa0\x07\x02\x13\x04\\\x01L@Z\xe3&-\xbe1\x8e9\xf6X\xf3XO\x1e?]\xc0S\x80\xd3\xcd\xecA`1\x02\x9bcG"\xe9\x8f\ty\x9c\xc0<\x02\xe7\x9c\x8bc?\x02\xdcv\xed5\x80yfg\x15\x02]\x04\x8e\x85\x86\xa7\x00]\xc6bQ\x029\x04\x04@\x8e9\xe8\x82@\x17\x01\x01\xd0\x85\xdd\xa2\x04r\x08\x1c}\x110G\x9b\xba\x18\x128\xf6\x1coh\xbfK\xef\xef\xb5\xee\xa5}\xdb\x7f_\xc0\x15\xc0\xbe\x87[\x04V% \x00V5n\x07K`_@\x00\xec{\xb8E`U\x02\x02`U\xe3v\xb0\x04\xf6\x05.z\x11\xd0\x0bA\xfb\x98n\x11h)0t\xbe\x1d\xfbm\xbf\xb1\x9e\xf6\x02`h\x81\xb1\x02\x1e#@\xa0\xaf\xc0\xa9\xe7\xedn`\\\xff\xb6~\xde\xc7\x8c\xf4=f\xab\x13 \x10 \xe05\x80\x00D%\x08T\x15\x10\x00U\'\xa7o\x02\x01\x02\x02 \x00Q\t\x02U\x05\x04@\xd5\xc9\xe9\x9b@\x80\x80\x00\x08@T\x82@U\x01\x01Pur\xfa&\x10  \x00\x02\x10\x95 PU@\x00T\x9d\x9c\xbe\t\x04\x08\x08\x80\x00D%\x08T\x15\x10\x00U\'\xa7o\x02\x01\x02\x02 \x00Q\t\x02U\x05\x04@\xd5\xc9\xe9\x9b@\x80\x80\x00\x08@T\x82@U\x01\x01Pur\xfa&\x10  \x00\x02\x10\x95 PU@\x00T\x9d\x9c\xbe\t\x04\x08\x08\x80\x00D%\x08T\x15\x10\x00U\'\xa7o\x02\x01\x02\x02 \x00Q\t\x02U\x05\x04@\xd5\xc9\xe9\x9b@\x80\x80\x00\x08@T\x82@U\x01\x01Pur\xfa&\x10  \x00\x02\x10\x95 PU@\x00T\x9d\x9c\xbe\t\x04\x08\x08\x80\x00D%\x08T\x15\x10\x00U\'\xa7o\x02\x01\x02\x02 \x00Q\t\x02U\x05\x04@\xd5\xc9\xe9\x9b@\x80\x80\x00\x08@T\x82@U\x01\x01Pur\xfa&\x10  \x00\x02\x10\x95 PU@\x00T\x9d\x9c\xbe\t\x04\x08\x08\x80\x00D%\x08T\x15\x10\x00U\'\xa7o\x02\x01\x02\x02 \x00Q\t\x02U\x05\x04@\xd5\xc9\xe9\x9b@\x80\x80\x00\x08@T\x82@U\x01\x01Pur\xfa&\x10  \x00\x02\x10\x95 PU@\x00T\x9d\x9c\xbe\t\x04\x08\x08\x80\x00D%\x08T\x15\x10\x00U\'\xa7o\x02\x01\x02\x02 \x00Q\t\x02U\x05\x04@\xd5\xc9\xe9\x9b@\x80\x80\x00\x08@T\x82@U\x01\x01Pur\xfa&\x10  \x00\x02\x10\x95 PU@\x00T\x9d\x9c\xbe\t\x04\x08\x08\x80\x00D%\x08T\x15\xf8\x0f\x0b\x97\xe6\xcc;\xbe\x02Z\x00\x00\x00\x00IEND\xaeB`\x82'
# print(test[0].shape)
image = test[5]
h, w = image.shape
center_h, center_w = h // 2, w // 1.5
start_h, start_w = h // 4, w // 6
plt.imshow(image, cmap='gray')
rect = patches.Rectangle((start_w, start_h), center_w, center_h, linewidth=1, edgecolor='r', facecolor='none')
plt.gca().add_patch(rect)
plt.show()
# Image.fromarray(test[0]).show()
# image_file = io.BytesIO(test[5])

# image = Image.open(image_file)

# image_np = np.array(image)
# print(image_np)
# Image.fromarray(image_np).show()
# image.show()
